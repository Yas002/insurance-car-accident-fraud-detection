name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in to Azure
        run: az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest ./Backend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest ./Frontend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest

      - name: Create container-group.json
        run: |
          cat <<EOF > container-group.json
          {
            "name": "${{ secrets.ACI_NAME }}",
            "location": "eastus",
            "properties": {
              "containers": [
                {
                  "name": "backend",
                  "properties": {
                    "image": "${{ secrets.ACR_NAME }}.azurecr.io/backend:latest",
                    "resources": {
                      "requests": {
                        "cpu": 1,
                        "memoryInGb": 1.5
                      }
                    },
                    "ports": [
                      {
                        "port": 8000
                      }
                    ]
                  }
                },
                {
                  "name": "frontend",
                  "properties": {
                    "image": "${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest",
                    "resources": {
                      "requests": {
                        "cpu": 1,
                        "memoryInGb": 1.5
                      }
                    },
                    "ports": [
                      {
                        "port": 8501
                      }
                    ]
                  }
                }
              ],
              "osType": "Linux",
              "ipAddress": {
                "type": "Public",
                "dnsNameLabel": "myappunique2023-${{ github.run_id }}",
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8000
                  },
                  {
                    "protocol": "TCP",
                    "port": 8501
                  }
                ]
              },
              "restartPolicy": "OnFailure",
              "imageRegistryCredentials": [
                {
                  "server": "${{ secrets.ACR_NAME }}.azurecr.io",
                  "username": "${{ secrets.ACR_USERNAME }}",
                  "password": "${{ secrets.ACR_PASSWORD }}"
                }
              ]
            }
          }
          EOF

      - name: Deploy to Azure Container Instances
        run: az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file container-group.json